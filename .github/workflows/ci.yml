name: CI for Energy Network Optimization

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the repository
    - name: Checkout repository
      uses: actions/checkout@v3

    # Step 2: Set up Julia
    - name: Set up Julia
      uses: julia-actions/setup-julia@v1
      with:
        version: 1.11.2  # Replace with the Julia version you are using locally

    # Step 3: Clear Julia cache (optional, to avoid potential stale environments)
    - name: Clear Julia cache
      run: rm -rf ~/.julia

    # Step 4: Install dependencies
    - name: Install dependencies
      run: julia --project=. -e 'using Pkg; Pkg.instantiate()'

    # Step 5: Debug dependencies (optional, prints installed packages in the log)
    - name: Debug dependencies
      run: julia --project=. -e 'using Pkg; Pkg.status()'

    # Step 6: Run tests
    - name: Run tests
      run: julia --project=. -e 'include("test/runtests.jl")'

    # Step 7: Execute the main script
    - name: Execute optimization
      run: julia --project=. main.jl





# name: CI for Energy Network Optimization

# on:
#   # Trigger on push or pull request to the main branch
#   push:
#     branches:
#       - main
#   pull_request:
#     branches:
#       - main
#   # Schedule the workflow to run daily at a random time
#   schedule:
#     - cron: "0 ${RANDOM_HOUR} * * *"  # Runs daily at a random hour (see below for RANDOM_HOUR generation)

# jobs:
#   test-and-optimize:
#     runs-on: ubuntu-latest

#     steps:
#       # Step 1: Checkout the repository
#       - name: Checkout repository
#         uses: actions/checkout@v3

#       # Step 2: Set up Julia
#       - name: Set up Julia
#         uses: julia-actions/setup-julia@v1
#         with:
#           version: 1.11.2  # Replace with the Julia version you are using locally

#       # Step 3: Clear Julia cache (optional, to avoid potential stale environments)
#       - name: Clear Julia cache
#         run: rm -rf ~/.julia

#       # Step 4: Install dependencies
#       - name: Install dependencies
#         run: julia --project=. -e 'using Pkg; Pkg.instantiate()'

#       # Step 5: Debug dependencies (optional, prints installed packages in the log)
#       - name: Debug dependencies
#         run: julia --project=. -e 'using Pkg; Pkg.status()'

#       # Step 6: Run tests
#       - name: Run tests
#         run: julia --project=. -e 'include("test/runtests.jl")'

#       # Step 7: Execute the main script
#       - name: Execute optimization
#         run: julia --project=. main.jl

#       # Step 8: Generate a random hour for the next run (Optional)
#       - name: Generate random hour for next run
#         id: random-hour
#         run: echo "RANDOM_HOUR=$(( $RANDOM % 24 ))" >> $GITHUB_ENV

#       # Step 9: Log the random hour (Optional)
#       - name: Log random hour
#         run: echo "Next scheduled run will occur at hour ${{ env.RANDOM_HOUR }}"
